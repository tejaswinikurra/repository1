import java.security.MessageDigest;
import java.security.SecureRandom;
import java.util.Base64;

public class Passwordhasher {

    // Generate a random salt
    public static String generateSalt() {
        SecureRandom random = new SecureRandom();
        byte[] salt = new byte[16]; // 16 bytes = 128 bits salt
        random.nextBytes(salt);
        return Base64.getEncoder().encodeToString(salt);
    }

    // Hash password with SHA-256
    public static String hashPassword(String password, String salt) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            String saltedPassword = password + salt; // Combine password and salt
            byte[] hash = md.digest(saltedPassword.getBytes());

            // Convert hash bytes to hex format
            StringBuilder hexString = new StringBuilder();
            for (byte b : hash) {
                hexString.append(String.format("%02x", b));
            }
            return hexString.toString();

        } catch (Exception e) {
            throw new RuntimeException("Error hashing password", e);
        }
    }

    public static void main(String[] args) {
        // User's password input
        String password = "mypassword";

        // Generate a unique salt for each user
        String salt = generateSalt();
        System.out.println("Generated Salt: " + salt);

        // Hash the password with salt
        String hashedPassword = hashPassword(password, salt);
        System.out.println("Hashed Password: " + hashedPassword);
    }
}
