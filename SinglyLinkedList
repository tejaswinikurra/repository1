class Node {
    int data;
    Node next;

    // Constructor to initialize a node
    public Node(int data) {
        this.data = data;
        this.next = null; // Initially, next is null
    }
}

class LinkedList {
    Node head; // Head of the list

    // Constructor to initialize the LinkedList
    public LinkedList() {
        head = null;
    }

    // Method to add a new node at the end of the list
    public void append(int data) {
        Node newNode = new Node(data);

        // If the list is empty, make the new node the head
        if (head == null) {
            head = newNode;
            return;
        }

        // Traverse to the end of the list and add the new node
        Node current = head;
        while (current.next != null) {
            current = current.next;
        }
        current.next = newNode;
    }

    // Method to display the linked list
    public void display() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
}

public class SinglyLinkedList {
    public static void main(String[] args) {
        LinkedList list = new LinkedList();

        // Adding nodes to the list
        list.append(10);
        list.append(20);
        list.append(30);

        // Displaying the list
        list.display(); // Output: 10 -> 20 -> 30 -> null
    }
}
